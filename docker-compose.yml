services:
  db:
    image: ghcr.io/baosystems/postgis:16-3.4
    # Native ARM64 support - no platform specification needed
    environment:
      POSTGRES_USER: gis
      POSTGRES_PASSWORD: gis
      POSTGRES_DB: gis
      # Performance tuning parameters
      POSTGRES_INITDB_ARGS: "--data-checksums"
      # PostgreSQL performance parameters
      POSTGRES_SHARED_BUFFERS: "2GB"
      POSTGRES_EFFECTIVE_CACHE_SIZE: "6GB"
      POSTGRES_WORK_MEM: "512MB"
      POSTGRES_MAINTENANCE_WORK_MEM: "1GB"
      POSTGRES_RANDOM_PAGE_COST: "1.1"
      POSTGRES_PARALLEL_WORKERS: "4"
      POSTGRES_MAX_WORKER_PROCESSES: "8"
      POSTGRES_MAX_PARALLEL_WORKERS: "8"
      POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER: "4"
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres-config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    # Add healthcheck to ensure database is ready before other services start
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gis"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:8
    platform: linux/arm64/v8
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports: ["5050:80"]
    depends_on:
      db:
        condition: service_healthy

  valhalla-build:
    image: ghcr.io/gis-ops/docker-valhalla/valhalla:latest
    platform: linux/arm64/v8
    entrypoint: ["sleep","infinity"]
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata:
    # This ensures data persists between container restarts
